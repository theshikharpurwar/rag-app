# FILE: docker-compose.yml (Final version for Setup A)

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    restart: unless-stopped

  backend:
    build:
      context: ./backend # Contains Dockerfile installing Node & Python
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      # Mount uploads for persistence AND access by python scripts
      - ./backend/uploads:/app/uploads
    environment:
      - MONGODB_URI=mongodb://mongo:27017/rag_db
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      # ** Crucial: URL for Python script inside container to reach Ollama on HOST **
      - OLLAMA_HOST_URL=http://host.docker.internal:11434 # For Docker Desktop
      - NODE_ENV=production
    depends_on:
      - mongo
      - qdrant
    restart: unless-stopped
    # Required on some Docker setups (like older Docker Desktop or some Linux)
    # for host.docker.internal DNS to work reliably from container.
    extra_hosts:
      - "host.docker.internal:host-gateway"

  mongo:
    image: mongo:6.0
    # ports: # Only expose if needed for external access
    #   - "27017:27017"
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped

  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333" # Expose REST API to host
      # - "6334:6334" # gRPC
    volumes:
      - qdrant_data:/qdrant/storage
    restart: unless-stopped

volumes:
  qdrant_data:
  mongo_data: